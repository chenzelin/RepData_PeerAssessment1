geom_bar
ggplot(steps.date, aes(date, count)) +
geom_bar()
ggplot(steps.date, aes(date, count)) +
geom_bar()
ggplot(steps.date, aes(date, count)) +
geom_bar(count)
ggplot(steps.date, aes(date)) +
geom_bar(count)
ggplot(steps.date, aes(date)) +
geom_bar()
rm(test)
View(steps.date)
View(mpg)
ggplot(steps.date, aes(date, count)) +
geom_bar()
ggplot(steps.date, aes(date, count)) +
geom_bar(count)
ggplot(steps.date, aes(date, count)) +
geom_bar(as(count)
ggplot(steps.date, aes(date, count)) +
ggplot(steps.date, aes(date, count)) +
geom_histogram()
ggplot(steps.date, aes(date)) +
geom_histogram()
counts <- table(mtcars$gear)
counts
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
ggplot(mtcars, aes(factor(mtcars$gear)))+ geom_bar()
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = identity)
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = "identity"")
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = "identity)
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = "identity")
qplot(steps.date$count, names.arg=steps.date$date, geom="bar")
qplot(steps.date$count, geom="bar")
qplot(steps.date$date, geom="bar")
qplot(steps.date$date, names.arg=steps.date$date, geom="bar")
steps.date <- aggregate(steps ~ date, data=datos, FUN=sum)
steps.date <- aggregate(steps ~ date, data=activity, FUN=sum)
qplot(steps.date$steps, names.arg=steps.date$date, geom="bar")
library(dplyr)
library(ggplot2)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, count = sum(steps, na.rm = TRUE))
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(date, count)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks=seq(0, 10, 5))
View(steps.date)
ggplot(steps.date, aes(as.Date(date), count)) +
geom_bar(stat = "identity")
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps, na.rm = TRUE))
ggplot(steps.date, aes(date = as.Date(date), count)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), count)) +
geom_bar(stat = "identity")
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps, na.rm = TRUE))
ggplot(steps.date, aes(date = as.Date(date), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity")
as.Date
ggplot(steps.date, aes(as.Date(date, "%Y%m%d"), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date, "%Y-%m-%d"), steps)) +
geom_bar(stat = "identity")
as.POSIXlt(’2005-4-19 7:01:00’)
as.POSIXlt("2005-4-19 7:01:00")
ggplot(steps.date, aes(as.POSIXlt(date, "%Y-%m-%d"), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.POSIXlt(date), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity")
?as.Date
ggplot(steps.date, aes(as.Date(date, tz = "UTC"), steps)) +
geom_bar(stat = "identity")
?date
?as.date
?as.Date
Sys.setlocale("LC_TIME", "English")
ggplot(steps.date, aes(as.Date(date, tz = "UTC"), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity") +
labs(x = "date", title = "Total Number of Steps Taken Each Day")
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity") +
labs(x = "date", title = "Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
Sys.setlocale("LC_TIME", "English")
?Sys.setlocale
rm(counts)
View(steps.date)
mean(steps.date$steps)
View(grouped)
summarise(grouped, steps = sum(steps))
mean(steps.date$steps, na.rm = TRUE)
steps.date <- summarise(grouped, steps = sum(steps))
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
library(dplyr)
library(ggplot2)
Systime <- Sys.setlocale("LC_TIME", "English")
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
ggplot(steps.date, aes(as.Date(date), steps)) +
geom_bar(stat = "identity") +
labs(x = "date", title = "Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
hist(mpg, displ)
mpg
ggplot(steps.date, aes(steps)) +
geom_histogram() +
labs(x = "date", title = "Total Number of Steps Taken Each Day") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(steps.date, aes(steps)) +
geom_histogram()
ggplot(steps.date, aes(steps)) +
geom_histogram(binwidth = 0.01)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
ggplot(steps.date, aes(steps)) +
geom_histogram(binwidth = 100)
ggplot(steps.date, aes(steps)) +
geom_histogram()
ggplot(steps.date, aes(steps)) +
geom_histogram(bins = 10)
ggplot(steps.date, aes(steps)) +
geom_histogram(bins = 6)
hist(steps.date)
hist(steps.date, steps)
hist(steps.date$steps)
ggplot(steps.date, aes(steps)) +
geom_histogram(bins = 5)
ggplot(steps.date, aes(steps)) +
geom_histogram(bins = 5)
hist(steps.date$steps)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps)
hist(steps.date$steps, main = "1232")
```{r}
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
library(dplyr)
```{r, message = FALSE}
library(dplyr)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps)
hist(steps.date$steps, main = "Histogram of steps taken each day")
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
View(activity)
hist(steps.date$steps)
unique(activity, interval)
unique(activity$interval)
aggregate(steps ~ interval, data = activity, FUN = mean)
grouped <- group_by(activity, interval)
steps.interval <- summarise(grouped, mean(steps))
View(steps.interval)
steps.interval <- summarise(grouped, mean(steps, na.rm = TRUE))
View(steps.interval)
View(steps.interval)
plot(steps.interval, type = "l")
plot(steps.interval, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps")
plot(steps.interval, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
grouped <- group_by(activity, interval)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
plot(steps.interval, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
which.max(steps.date$steps)
which.max(steps.interval$steps)
steps.interval$interval[which.max(steps.interval$steps)]
activity$steps == NA
activity$steps == "NA"
is.na(activity$steps)
sum(is.na(activity$steps))
sum(is.na(activity))
str(is.na(activity))
class(is.na(activity))
is.na(activity)
newset <- activity
is.na(newset$steps)
which(is.na(newset$steps))
steps.interval == "5"
steps.interval$interval == "5"
steps.interval[steps.interval$interval == "5", "steps"]
steps.interval[steps.interval$interval == "5",]
subset(steps.interval, interval == "5")
subset(steps.interval, interval == "5")["steps"]
subset(steps.interval, interval == "5")("steps")
subset(steps.interval, interval == "5")["steps"]
for(i in newset$steps){ newset$steps}
for(i in newset$steps){ newset$steps}
for(i in newset$steps){ print newset$steps}
for(i in newset$steps){ print(newset$steps)}
for(i in head(newset$steps){ print(newset$steps)}
for(i in head(newset)$steps){ print(newset$steps)}
for(i in head(newset)$steps){ print(i)}
for(step in head(newset)$steps){ print(step)}
for(step in newset$steps){ print(step)}
View(newset)
length(newset$steps)
for(i in newset$steps){
}
for(i in newset$steps){ print(i)
}
for(i in length(newset$steps)){ print(i)
}
for(i in 1:length(newset$steps)){ print(i)
}
newset$steps[1]
newset$steps[456]
newset$steps[459]
newset$steps[460]
newset$steps[461]
newset$steps[462]
newset$steps[4453]
newset$steps[453]
newset$steps[353]
newset$steps[788]
filler <- function(inter) {
result <- subset(steps.interval, interval == inter)["steps"]
}
newset <- activity
for(i in 1:length(newset$steps)){
if (is.na(newset$steps[i])) {
newset$steps[i] <- filler(newset$interval[i])
}
}
rm(i)
rm(step)
rm(Systime)
rm(filler)
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
steps.date <- summarise(grouped, steps = sum(steps))
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
unzip("activity.zip")
activity <- read.csv("activity.csv")
library(dplyr)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
grouped <- group_by(activity, interval)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
plot(steps.interval, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
steps.interval$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
filler <- function(inter) {
result <- subset(steps.interval, interval == inter)["steps"]
}
newset <- activity
for(i in 1:length(newset$steps)){
if (is.na(newset$steps[i])) {
newset$steps[i] <- filler(newset$interval[i])
}
}
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
steps.date <- summarise(grouped, steps = sum(steps))
steps.date <- summarise(grouped, sum(steps))
newset <- activity
for(i in 1:length(newset$steps)){
if (is.na(newset$steps[i])) {
newset$steps[i] <- filler(newset$interval[i])
}
}
grouped <- group_by(newset, date)
summarise(grouped)
grouped
subset(steps.interval, interval == "5")["steps"]
subset(steps.interval, interval == "5")$steps
filler <- function(inter) {
result <- subset(steps.interval, interval == inter)$steps
}
newset <- activity
for(i in 1:length(newset$steps)){
if (is.na(newset$steps[i])) {
newset$steps[i] <- filler(newset$interval[i])
}
}
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
as.Date(newset$date)
weekday(as.Date(newset$date))
weekdays(as.Date(newset$date))
daytype <- function(date){
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
newset$daytype <- as.factor(sapply(newset$date, daytype))
newset$daytype <- as.factor(sapply(as.Date(newset$date), daytype))
par(mfrow = c(2, 1))
group_by(newset, interval)
grouped <- group_by(newset, interval)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
plot(subset(steps.interval, daytype = "weekend"), type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
subset(steps.interval, daytype = "weekend")
plot(subset(steps.interval, daytype == "weekend"), type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
subset(steps.interval, daytype == "weekend")
subset(steps.interval, daytype == "weekday")
?plot
sub_weekday <- subset(steps.interval, daytype == "weekday")
sub_weekend <- subset(steps.interval, daytype == "weekend")
plot(sub_weekday$interval, sub_weekday$steps, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
plot(sub_weekday$interval, sub_weekday$steps, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern on weekday")
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
par(mfrow = c(2, 1))
sub_weekend <- subset(steps.interval, daytype == "weekend")
plot(sub_weekend$interval, sub_weekend$steps, type = "l", xlab = "Interval", ylab = "Number of Steps",
main = "weekend")
sub_weekday <- subset(steps.interval, daytype == "weekday")
plot(sub_weekday$interval, sub_weekday$steps, type = "l", xlab = "Interval", ylab = "Number of Steps",
main = "weekday")
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
sub_weekend <- subset(steps.interval, daytype == "weekend")
sub_weekday <- subset(steps.interval, daytype == "weekday")
par(mfrow = c(2, 1))
plot(sub_weekend$interval, sub_weekend$steps, type = "l", xlab = "Interval", ylab = "Number of Steps",
main = "weekend")
plot(sub_weekday$interval, sub_weekday$steps, type = "l", xlab = "Interval", ylab = "Number of Steps",
main = "weekday")
par(mfrow = c(2, 1))
for (type in c("weekend", "weekday")) {
steps.type <- aggregate(steps ~ interval, data = activity, subset = activity$daytype ==
type, FUN = mean)
plot(steps.type, type = "l", main = type)
}
```{r}
par(mfrow = c(2, 1))
for (type in c("weekend", "weekday")) {
steps.type <- aggregate(steps ~ interval, data = newset, subset = newset$daytype ==
type, FUN = mean)
plot(steps.type, type = "l", main = type)
}
par(mfrow = c(2, 1))
for (type in c("weekend", "weekday")) {
steps.type <- aggregate(steps ~ interval, data = newset, subset = newset$daytype ==
type, FUN = mean)
plot(steps.type, type = "l", main = type)
}
library(ggplot2)
?aggregate
grouped <- group_by(newset, interval, daytype)
grouped <- group_by(newset, interval, daytype)
ggplot(grouped, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
xlab("5 Min Interval") + ylab("Steps")
grouped <- group_by(newset, interval)
ggplot(grouped, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
xlab("5 Min Interval") + ylab("Steps")
grouped <- aggregate(steps ~ interval + day, data = data_filled, mean)
grouped <- aggregate(steps ~ interval + day, data = newset, mean)
grouped <- aggregate(steps ~ interval + daytype, data = newset, mean)
ggplot(grouped, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
xlab("5 Min Interval") + ylab("Steps")
grouped1 <- group_by(newset, interval)
grouped1 <- group_by(newset, interval, daytype)
str(grouped1)
class(grouped1)
class((grouped))
View(grouped1)
View(grouped)
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
xlab("5 Min Interval") + ylab("Steps")
ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
unlink('PA1_template_cache', recursive = TRUE)
unzip("activity.zip")
activity <- read.csv("activity.csv")
library(dplyr)
grouped <- group_by(activity, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
grouped <- group_by(activity, interval)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
plot(steps.interval, type = "l", xlab = "5 Min Interval", ylab = "Average of Steps",
main = "Average Daily Activity Pattern")
steps.interval$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
# Use the means for the 5-minute intervals as fillers for missing values
filler <- function(inter) {
result <- subset(steps.interval, interval == inter)$steps
}
newset <- activity
for(i in 1:length(newset$steps)){
if (is.na(newset$steps[i])) {
newset$steps[i] <- filler(newset$interval[i])
}
}
grouped <- group_by(newset, date)
steps.date <- summarise(grouped, steps = sum(steps))
hist(steps.date$steps, main = "Histogram of steps taken each day", xlab = "Steps")
mean(steps.date$steps, na.rm = TRUE)
median(steps.date$steps, na.rm = TRUE)
daytype <- function(date){
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
newset$daytype <- as.factor(sapply(as.Date(newset$date), daytype))
library(ggplot2)
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
avg_int_day <- aggregate(steps ~ interval + daytype, data = newset, mean)
library(ggplot2)
ggplot(avg_int_day, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) + xlab("5 Min Interval") + ylab("Steps")
ggplot(avg_int_day, aes(interval, steps)) + geom_line() + facet_grid(daytype ~ .) + xlab("5 Min Interval") + ylab("Steps")
unlink('PA1_template_cache', recursive = TRUE)
ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
g <- ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
g
?lattice
?xyplot
grouped <- group_by(newset, interval, daytype)
steps.interval <- summarise(grouped, steps = mean(steps, na.rm = TRUE))
g <- ggplot(steps.interval, aes(interval, steps)) +
geom_line() +
facet_grid(daytype ~ .) +
labs(x = "Interval", y = "Number of steps")
g
str(steps.interval)
?lattice
library(lattice)
?lattice
xyplot(steps ~ interval | daytype, data=steps.interval )
xyplot(steps ~ interval | daytype, data=~.steps.interval )
xyplot(steps ~ interval | ~.daytype, data=steps.interval )
?xyplot
xyplot(steps ~ interval | ~.daytype, data=steps.interval,layout=c(1,2),type='l')
xyplot(steps ~ interval | daytype, data=steps.interval,layout=c(1,2),type='l')
str(steps.interval)
Sys.setlocale("LC_TIME","English")
Sys.setlocale("LC_TIME","English")
summarise(grouped, steps = mean(steps, na.rm = TRUE))
?Sys.setlocale
Sys.getlocale()
